Parameters:
  Region:
    Type: String
    Description: "AvailabilityZones Name"
    Default: ap-south-1
    AllowedValues: [ap-south-1, eu-north-1, us-west-1]

Mappings:
  InstanceImage:
    ap-south-1:
      ImageId: ami-0aebec83a182ea7ea
    eu-north-1:
      ImageId: ami-0658158d7ba8fd573
    us-west-1:
      ImageId: ami-02a7ad1c45194c72f

  KeyName:
    ap-south-1:
      KeyValue: AWS-Linux
    eu-north-1:
      KeyValue: hello
    us-west-1:
      KeyValue: californiapublickey

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      Tags:
        - Key: Name
          Value: myVPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.2.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.1.3.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: PrivateSubnet2

  IGW:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRouteConfig:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  WebEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - InstanceImage
        - !Ref "AWS::Region"
        - ImageId
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet
      KeyName: !FindInMap
        - KeyName
        - !Ref "AWS::Region"
        - KeyValue
      SecurityGroups:
        - !Ref WebEC2InstanceSG
      Tags:
        - Key: Name
          Value: WebEC2Instance

  WebEC2InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the Web EC2 instance"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  AppEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - InstanceImage
        - !Ref "AWS::Region"
        - ImageId
      InstanceType: t2.micro
      SubnetId: !Ref PrivateSubnet
      KeyName: !FindInMap
        - KeyName
        - !Ref "AWS::Region"
        - KeyValue
      SecurityGroups:
        - !Ref AppEC2InstanceSG
      Tags:
        - Key: Name
          Value: AppEC2Instance

  AppEC2InstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the APP EC2 instance"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref WebEC2InstanceSG

  MySQLDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.micro
      Engine: MySQL
      EngineVersion: '5.7'
      MasterUsername: admin
      MasterUserPassword: admin123
      DBName: mydb
      VPCSecurityGroups:
        - !Ref MySQLSecurityGroup
      DBSubnetGroupName: !Ref MySQLDBSubnetGroup
      AllocatedStorage: 20
      BackupRetentionPeriod: 7
      DeletionProtection: true

  MySQLDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "MySQL Subnet Group"
      SubnetIds:
        - !Ref PrivateSubnet
        - !Ref PrivateSubnet2

  MySQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow access to MySQL from AppTier EC2"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref AppEC2InstanceSG

  # Route 53 Hosted Zone
  MyHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: assignmentdomain.com

  # Route 53 Record Set for the Web Tier EC2
  WebEC2Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref MyHostedZone
      Name: www.assignmentdomain.com.
      Type: A
      TTL: '60'
      ResourceRecords:
        - !GetAtt WebEC2Instance.PublicIp

Outputs:
  WebInstancePublicIP:
    Description: "Public IP of the Web Tier EC2 instance"
    Value: !GetAtt WebEC2Instance.PublicIp
